version: "3.8"

services:
  app:
    image: trisaptono123/ticket-booking-app:2024.1.7
    container_name: ticket-booking
    ports:
      - "8081:8080"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - database
    entrypoint: ["go", "run", "main.go"]
    networks:
      - ticket_network
    deploy:
      resources:
        limits:
          cpus: "1.0"
        reservations:
          cpus: "0.5"

  database:
    image: postgres:15
    container_name: ticket_postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ticket_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=30
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_NOTIFY=false

volumes:
  postgres_data:

networks:
  ticket_network:
    driver: bridge
